1. How did viewing a diff between two versions of a file help you spot the bug?

It helped because the program shows which lines were removed and which ones were added. When comparing the two lines you can see if a word was mispelled. Therefore you can just look at a few lines vs scanning the entire code to find the typo.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It will save you time by not having to figure out where mistakes were made throughout a long code base. By constantly saving your changes, when a problem occurs you just have to look at the previous version and compare the newest one to find the error. 

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros of commiting manually are that you decide what is too big or small to commit. cons are you may go too long without realizing to commit .

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

because many files are linked i.e html, css, js and changes in one affect another.

5. How can you use the commands git log and git diff to view the history of files? 

git log allows you to see the names dates and ids of the commits and you can compare to different commits using git diff to see any insertions and deletions.

6. How might using version control make you more confident to make changes that could break something?

you can always revert back to a previous commit to see where bugs were created. 
